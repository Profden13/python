#1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление. Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

def my_func_del(a, b):
    if b == 0:
        return 'Делить на 0 нельзя!'
    else:
        return a/b

a = int(input('Введите делимое: '))
b = int(input('Введите делитель: '))

res = my_func_del(a, b)

print(f"Результат выполнения функции - {res}")

#2. Выполнить функцию, которая принимает несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы. Осуществить вывод данных о пользователе одной строкой.

def about_person(name, surname, bday, city, mail, phone):
    print(f"{name} {surname}, год рождения - {bday}, проживает в городе {city}, e-mail: {mail}, телефон: {phone}")

about_person(mail='test@test.ru', phone='+7 903 123 45 67', city='Москва', bday='1980', name='Петр', surname='Иванов')

#3. Реализовать функцию my_func(), которая принимает три позиционных аргумента и возвращает сумму наибольших двух аргументов.

def my_func(a, b, c):
    my_list = [a, b, c]
    my_list.sort()
    return my_list[1]+my_list[2]
    
print(my_func(3, -2, 7))    

#4. Программа принимает действительное положительное число x и целое отрицательное число y. Выполните возведение числа x в степень y. Задание реализуйте в виде функции my_func(x, y). При решении задания нужно обойтись без встроенной функции возведения числа в степень.

def my_pow_1(x, y):
    return x**y

def my_pow_2(x, y):
    z = 1
    for i in range(-y):
        z = z * x
    return 1/z

x = int(input('Введите действительное положительное число x: '))
y = int(input('Введите целое отрицательное число y: '))

res1 = my_pow_1(x, y)

res2 = my_pow_2(x, y)

print(f"Результат возведения в степень - {res1}")
print(f"Результат возведения в степень - {res2}")


#Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **. Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
#5. Программа запрашивает у пользователя строку чисел, разделённых пробелом. При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделённых пробелом и снова нажать Enter. Сумма вновь введённых чисел будет добавляться к уже подсчитанной сумме.

#Но если вместо числа вводится специальный символ, выполнение программы завершается. Если специальный символ введён после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.

input_list = []
list_sum = 0

print('Введите строку чисел разделенных пробелом, для выхода из программы введите символ "q":')
while not 'q' in input_list:
    input_list = input('> ').split(' ')
    if 'q' in input_list:
        my_list = input_list[0:input_list.index('q')]
    else:
        my_list = input_list
    
    for i in range(len(my_list)):
        my_list[i] = int(my_list[i])
        
    list_sum += sum(my_list)
    print(f"Сумма введеных чисел - {list_sum}")

#6. Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и возвращающую их же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.

def int_func(my_str):
    return my_str.title()
    
print(int_func('text'))

#7. Продолжить работу над заданием. В программу должна попадать строка из слов, разделённых пробелом. Каждое слово состоит из латинских букв в нижнем регистре. Нужно сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. Используйте написанную ранее функцию int_func().

print(int_func('one more word'))
